%%
%% Autogenerated by Thrift Compiler (0.9.3)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(viralligator_thrift).
-behaviour(thrift_service).


-include("viralligator_thrift.hrl").

-export([struct_info/1, function_info/2]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% publish(This, Url, Tags)
function_info('publish', params_type) ->
  {struct, [{1, string},
          {2, {list, string}}]}
;
function_info('publish', reply_type) ->
  {struct, []};
function_info('publish', exceptions) ->
  {struct, []}
;
% sharings(This, Tags)
function_info('sharings', params_type) ->
  {struct, [{1, {list, string}}]}
;
function_info('sharings', reply_type) ->
  {list, {struct, {'viralligator_types', 'TotalShare'}}};
function_info('sharings', exceptions) ->
  {struct, []}
;
% shares_by_url(This, Url)
function_info('shares_by_url', params_type) ->
  {struct, [{1, string}]}
;
function_info('shares_by_url', reply_type) ->
  {struct, {'viralligator_types', 'Sharing'}};
function_info('shares_by_url', exceptions) ->
  {struct, []}
;
% total_shares(This, Url)
function_info('total_shares', params_type) ->
  {struct, [{1, string}]}
;
function_info('total_shares', reply_type) ->
  i64;
function_info('total_shares', exceptions) ->
  {struct, []}
;
% fb_shares(This)
function_info('fb_shares', params_type) ->
  {struct, []}
;
function_info('fb_shares', reply_type) ->
  {list, {struct, {'viralligator_types', 'Sharing'}}};
function_info('fb_shares', exceptions) ->
  {struct, []}
;
% ok_shares(This)
function_info('ok_shares', params_type) ->
  {struct, []}
;
function_info('ok_shares', reply_type) ->
  {list, {struct, {'viralligator_types', 'Sharing'}}};
function_info('ok_shares', exceptions) ->
  {struct, []}
;
% vk_shares(This)
function_info('vk_shares', params_type) ->
  {struct, []}
;
function_info('vk_shares', reply_type) ->
  {list, {struct, {'viralligator_types', 'Sharing'}}};
function_info('vk_shares', exceptions) ->
  {struct, []}
;
% gplus_shares(This)
function_info('gplus_shares', params_type) ->
  {struct, []}
;
function_info('gplus_shares', reply_type) ->
  {list, {struct, {'viralligator_types', 'Sharing'}}};
function_info('gplus_shares', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> erlang:error(function_clause).

