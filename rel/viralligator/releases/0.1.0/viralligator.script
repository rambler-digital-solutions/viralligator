%% script generated at {2016,10,20} {14,56,46}
{script,
    {"viralligator","0.1.0"},
    [{preLoaded,
         [erl_prim_loader,erl_tracer,erlang,erts_code_purger,
          erts_dirty_process_code_checker,erts_internal,
          erts_literal_area_collector,init,otp_ring0,prim_eval,prim_file,
          prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ERTS_LIB_DIR/kernel-5.1/ebin","$ERTS_LIB_DIR/stdlib-3.1/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ERTS_LIB_DIR/kernel-5.1/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_ddll,
          erl_distribution,erl_epmd,erl_reply,erts_debug,gen_sctp,gen_tcp,
          gen_udp,global,global_group,global_search,group,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel_config,local_tcp,
          local_udp,net,net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ERTS_LIB_DIR/stdlib-3.1/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_anno,erl_bits,erl_compile,erl_expand_records,
          erl_internal,erl_posix_msg,erl_pp,erl_scan,erl_tar,
          error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,lib,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ERTS_LIB_DIR/compiler-7.0.2/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bool,beam_bs,beam_bsm,beam_clean,
          beam_dead,beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_reorder,
          beam_split,beam_trim,beam_type,beam_utils,beam_validator,beam_z,
          cerl,cerl_clauses,cerl_inline,cerl_sets,cerl_trees,compile,core_lib,
          core_lint,core_parse,core_pp,core_scan,erl_bifs,rec_env,
          sys_core_dsetel,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,sys_pre_expand,v3_codegen,v3_core,v3_kernel,
          v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/elixir-1.3.3/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadFunctionError','Elixir.BadMapError',
          'Elixir.BadStructError','Elixir.Base','Elixir.Behaviour',
          'Elixir.Bitwise','Elixir.Calendar','Elixir.Calendar.ISO',
          'Elixir.CaseClauseError','Elixir.Code','Elixir.Code.LoadError',
          'Elixir.Collectable','Elixir.Collectable.BitString',
          'Elixir.Collectable.File.Stream','Elixir.Collectable.HashDict',
          'Elixir.Collectable.HashSet','Elixir.Collectable.IO.Stream',
          'Elixir.Collectable.List','Elixir.Collectable.Map',
          'Elixir.Collectable.MapSet','Elixir.CompileError',
          'Elixir.CondClauseError','Elixir.Date','Elixir.DateTime',
          'Elixir.Dict','Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.File.Stream','Elixir.Enumerable.Function',
          'Elixir.Enumerable.GenEvent.Stream','Elixir.Enumerable.HashDict',
          'Elixir.Enumerable.HashSet','Elixir.Enumerable.IO.Stream',
          'Elixir.Enumerable.List','Elixir.Enumerable.Map',
          'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
          'Elixir.Enumerable.Stream','Elixir.ErlangError','Elixir.Exception',
          'Elixir.File','Elixir.File.CopyError','Elixir.File.Error',
          'Elixir.File.Stat','Elixir.File.Stream','Elixir.Float',
          'Elixir.FunctionClauseError','Elixir.GenEvent',
          'Elixir.GenEvent.Stream','Elixir.GenServer','Elixir.HashDict',
          'Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
          'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Map','Elixir.Inspect.MapSet',
          'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Time',
          'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
          'Elixir.Inspect.Version.Requirement','Elixir.Integer',
          'Elixir.Kernel','Elixir.Kernel.CLI','Elixir.Kernel.ErrorHandler',
          'Elixir.Kernel.LexicalTracker','Elixir.Kernel.ParallelCompiler',
          'Elixir.Kernel.ParallelRequire','Elixir.Kernel.SpecialForms',
          'Elixir.Kernel.Typespec','Elixir.Kernel.Utils','Elixir.KeyError',
          'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
          'Elixir.List.Chars.Atom','Elixir.List.Chars.BitString',
          'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
          'Elixir.List.Chars.List','Elixir.Macro','Elixir.Macro.Env',
          'Elixir.Map','Elixir.MapSet','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.RuntimeError','Elixir.Set',
          'Elixir.Stream','Elixir.Stream.Reducers','Elixir.String',
          'Elixir.String.Break','Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Date','Elixir.String.Chars.DateTime',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.NaiveDateTime',
          'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement',
          'Elixir.String.Normalizer','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.Time','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.UndefinedFunctionError','Elixir.UnicodeConversionError',
          'Elixir.Version','Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Parser.DSL','Elixir.Version.Requirement',
          'Elixir.WithClauseError',elixir,elixir_aliases,elixir_bitstring,
          elixir_bootstrap,elixir_clauses,elixir_code_server,elixir_compiler,
          elixir_config,elixir_def,elixir_def_defaults,elixir_def_overridable,
          elixir_dispatch,elixir_env,elixir_errors,elixir_exp,
          elixir_exp_clauses,elixir_fn,elixir_for,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_parser,elixir_quote,elixir_rewrite,
          elixir_scope,elixir_sup,elixir_tokenizer,elixir_translator,
          elixir_try,elixir_utils,elixir_with]},
     {path,["$ROOT/lib/edeliver-1.4.0/ebin"]},
     {primLoad,
         ['Elixir.Edeliver','Elixir.Edeliver.Relup.Config',
          'Elixir.Edeliver.Relup.DefaultModification',
          'Elixir.Edeliver.Relup.InsertInstruction',
          'Elixir.Edeliver.Relup.Instruction',
          'Elixir.Edeliver.Relup.Instructions',
          'Elixir.Edeliver.Relup.Instructions.CheckProcessesRunningOldCode',
          'Elixir.Edeliver.Relup.Instructions.CheckRanchAcceptors',
          'Elixir.Edeliver.Relup.Instructions.CheckRanchConnections',
          'Elixir.Edeliver.Relup.Instructions.CodeChangeOnAppProcesses',
          'Elixir.Edeliver.Relup.Instructions.FinishRunningRequests',
          'Elixir.Edeliver.Relup.Instructions.Info',
          'Elixir.Edeliver.Relup.Instructions.ReloadModules',
          'Elixir.Edeliver.Relup.Instructions.RerunFailedRequests',
          'Elixir.Edeliver.Relup.Instructions.ResumeAppProcesses',
          'Elixir.Edeliver.Relup.Instructions.ResumeChannels',
          'Elixir.Edeliver.Relup.Instructions.ResumeRanchAcceptors',
          'Elixir.Edeliver.Relup.Instructions.Sleep',
          'Elixir.Edeliver.Relup.Instructions.SoftPurge',
          'Elixir.Edeliver.Relup.Instructions.StartSection',
          'Elixir.Edeliver.Relup.Instructions.SuspendAppProcesses',
          'Elixir.Edeliver.Relup.Instructions.SuspendChannels',
          'Elixir.Edeliver.Relup.Instructions.SuspendRanchAcceptors',
          'Elixir.Edeliver.Relup.Modification',
          'Elixir.Edeliver.Relup.PhoenixModification',
          'Elixir.Edeliver.Relup.RunnableInstruction',
          'Elixir.Edeliver.Relup.ShiftInstruction',
          'Elixir.Edeliver.StartupProgress','Elixir.Mix.Tasks.Edeliver',
          'Elixir.Mix.Tasks.Release.Version',
          'Elixir.Releases.Plugin.LinkConfig',
          'Elixir.Releases.Plugin.ModifyRelup']},
     {path,["$ROOT/lib/logger-1.3.3/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Config',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ROOT/lib/deppie-1.0.0/ebin"]},
     {primLoad,['Elixir.Deppie']},
     {path,["$ROOT/lib/eternal-1.1.3/ebin"]},
     {primLoad,
         ['Elixir.Eternal','Elixir.Eternal.Priv','Elixir.Eternal.Server',
          'Elixir.Eternal.Supervisor','Elixir.Eternal.Table']},
     {path,["$ROOT/lib/cachex-2.0.0/ebin"]},
     {primLoad,
         ['Elixir.Cachex','Elixir.Cachex.Actions',
          'Elixir.Cachex.Actions.Clear','Elixir.Cachex.Actions.Count',
          'Elixir.Cachex.Actions.Del','Elixir.Cachex.Actions.Empty',
          'Elixir.Cachex.Actions.Exists','Elixir.Cachex.Actions.Expire',
          'Elixir.Cachex.Actions.Get','Elixir.Cachex.Actions.GetAndUpdate',
          'Elixir.Cachex.Actions.Incr','Elixir.Cachex.Actions.Inspect',
          'Elixir.Cachex.Actions.Invoke','Elixir.Cachex.Actions.Keys',
          'Elixir.Cachex.Actions.Purge','Elixir.Cachex.Actions.Refresh',
          'Elixir.Cachex.Actions.Reset','Elixir.Cachex.Actions.Set',
          'Elixir.Cachex.Actions.Size','Elixir.Cachex.Actions.Stats',
          'Elixir.Cachex.Actions.Stream','Elixir.Cachex.Actions.Take',
          'Elixir.Cachex.Actions.Touch','Elixir.Cachex.Actions.Transaction',
          'Elixir.Cachex.Actions.Ttl','Elixir.Cachex.Actions.Update',
          'Elixir.Cachex.Application','Elixir.Cachex.Commands',
          'Elixir.Cachex.Constants','Elixir.Cachex.Errors',
          'Elixir.Cachex.ExecutionError','Elixir.Cachex.Fallback',
          'Elixir.Cachex.Hook','Elixir.Cachex.Hook.Behaviour',
          'Elixir.Cachex.Hook.Stats','Elixir.Cachex.Janitor',
          'Elixir.Cachex.Limit','Elixir.Cachex.LockManager',
          'Elixir.Cachex.LockManager.Server',
          'Elixir.Cachex.LockManager.Table','Elixir.Cachex.Macros',
          'Elixir.Cachex.Options','Elixir.Cachex.Policy',
          'Elixir.Cachex.Policy.LRW','Elixir.Cachex.Record',
          'Elixir.Cachex.State','Elixir.Cachex.Stats','Elixir.Cachex.Util',
          'Elixir.Cachex.Util.Names']},
     {path,["$ROOT/lib/ibrowse-4.2.2/ebin"]},
     {primLoad,
         [ibrowse,ibrowse_app,ibrowse_http_client,ibrowse_lb,ibrowse_lib,
          ibrowse_socks5,ibrowse_sup]},
     {path,["$ERTS_LIB_DIR/asn1-4.0.4/ebin"]},
     {primLoad,[asn1rt,asn1rt_nif]},
     {path,["$ERTS_LIB_DIR/crypto-3.7.1/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ERTS_LIB_DIR/public_key-1.2/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ERTS_LIB_DIR/ssl-8.0.2/ebin"]},
     {primLoad,
         [dtls,dtls_connection,dtls_connection_sup,dtls_handshake,dtls_record,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_alert,ssl_app,
          ssl_certificate,ssl_cipher,ssl_config,ssl_connection,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dist_sup,
          ssl_handshake,ssl_listen_tracker_sup,ssl_manager,ssl_pkix_db,
          ssl_record,ssl_session,ssl_session_cache,ssl_session_cache_api,
          ssl_socket,ssl_srp_primes,ssl_sup,ssl_tls_dist_proxy,ssl_v2,ssl_v3,
          tls,tls_connection,tls_connection_sup,tls_handshake,tls_record,
          tls_v1]},
     {path,["$ROOT/lib/httpotion-3.0.2/ebin"]},
     {primLoad,
         ['Elixir.HTTPotion','Elixir.HTTPotion.AsyncChunk',
          'Elixir.HTTPotion.AsyncEnd','Elixir.HTTPotion.AsyncHeaders',
          'Elixir.HTTPotion.AsyncResponse','Elixir.HTTPotion.Base',
          'Elixir.HTTPotion.ErrorResponse','Elixir.HTTPotion.HTTPError',
          'Elixir.HTTPotion.Headers','Elixir.HTTPotion.Response']},
     {path,["$ROOT/lib/viralligator-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Fb','Elixir.GPlus','Elixir.HTTPotion.Cache','Elixir.Ok',
          'Elixir.UriStringCanonical','Elixir.UriStringCanonical.BitString',
          'Elixir.Viralligator','Elixir.Viralligator.Handler',
          'Elixir.Viralligator.Models','Elixir.Viralligator.Models.Share',
          'Elixir.Viralligator.Models.Sharing',
          'Elixir.Viralligator.Models.TopicState',
          'Elixir.Viralligator.RedisClient','Elixir.Viralligator.Server',
          'Elixir.Viralligator.ShareService','Elixir.Vk',viralligator_thrift,
          viralligator_types]},
     {path,["$ROOT/lib/iex-1.3.3/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.CLI','Elixir.IEx.Config','Elixir.IEx.Evaluator',
          'Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.History.State','Elixir.IEx.Info','Elixir.IEx.Info.Any',
          'Elixir.IEx.Info.Atom','Elixir.IEx.Info.BitString',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
          'Elixir.IEx.Introspection','Elixir.IEx.Remsh','Elixir.IEx.Server',
          'Elixir.IEx.State']},
     {path,["$ERTS_LIB_DIR/sasl-3.0.1/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {progress,modules_loaded},
     {path,
         ["$ERTS_LIB_DIR/kernel-5.1/ebin","$ERTS_LIB_DIR/stdlib-3.1/ebin",
          "$ERTS_LIB_DIR/compiler-7.0.2/ebin","$ROOT/lib/elixir-1.3.3/ebin",
          "$ROOT/lib/edeliver-1.4.0/ebin","$ROOT/lib/logger-1.3.3/ebin",
          "$ROOT/lib/deppie-1.0.0/ebin","$ROOT/lib/eternal-1.1.3/ebin",
          "$ROOT/lib/cachex-2.0.0/ebin","$ROOT/lib/ibrowse-4.2.2/ebin",
          "$ERTS_LIB_DIR/asn1-4.0.4/ebin","$ERTS_LIB_DIR/crypto-3.7.1/ebin",
          "$ERTS_LIB_DIR/public_key-1.2/ebin","$ERTS_LIB_DIR/ssl-8.0.2/ebin",
          "$ROOT/lib/httpotion-3.0.2/ebin",
          "$ROOT/lib/viralligator-0.1.0/ebin","$ROOT/lib/iex-1.3.3/ebin",
          "$ERTS_LIB_DIR/sasl-3.0.1/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"5.1"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,local_tcp,local_udp,net,net_adm,
                        net_kernel,os,ram_file,rpc,user,user_drv,user_sup,
                        disk_log,disk_log_1,disk_log_server,disk_log_sup,
                        dist_ac,erl_ddll,erl_epmd,erts_debug,gen_tcp,gen_udp,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg2,seq_trace,
                        standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.1"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_anno,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,gen_statem,io,io_lib,
                        io_lib_format,io_lib_fread,io_lib_pretty,lib,lists,
                        log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,slave,sofs,
                        string,supervisor,supervisor_bridge,sys,timer,unicode,
                        win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.0.2"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bool,beam_bs,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_reorder,
                        beam_split,beam_trim,beam_type,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_sets,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_dsetel,sys_core_fold,sys_core_fold_lists,
                        sys_core_inline,sys_pre_attributes,sys_pre_expand,
                        v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.3.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadFunctionError',
                        'Elixir.BadMapError','Elixir.BadStructError',
                        'Elixir.Base','Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar','Elixir.Calendar.ISO',
                        'Elixir.CaseClauseError','Elixir.Code',
                        'Elixir.Code.LoadError','Elixir.Collectable',
                        'Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.CompileError',
                        'Elixir.CondClauseError','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict','Elixir.Enum',
                        'Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.ErlangError',
                        'Elixir.Exception','Elixir.File',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.Stat','Elixir.File.Stream',
                        'Elixir.Float','Elixir.FunctionClauseError',
                        'Elixir.GenEvent','Elixir.GenEvent.Stream',
                        'Elixir.GenServer','Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
                        'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.Inspect',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Map','Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.Version',
                        'Elixir.Inspect.Version.Requirement','Elixir.Integer',
                        'Elixir.Kernel','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.KeyError',
                        'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.Macro',
                        'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet',
                        'Elixir.MatchError','Elixir.Module',
                        'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime',
                        'Elixir.Node','Elixir.OptionParser',
                        'Elixir.OptionParser.ParseError','Elixir.Path',
                        'Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol','Elixir.Protocol.UndefinedError',
                        'Elixir.Range','Elixir.Record',
                        'Elixir.Record.Extractor','Elixir.Regex',
                        'Elixir.Regex.CompileError','Elixir.RuntimeError',
                        'Elixir.Set','Elixir.Stream','Elixir.Stream.Reducers',
                        'Elixir.String','Elixir.String.Break',
                        'Elixir.String.Casing','Elixir.String.Chars',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Normalizer','Elixir.String.Unicode',
                        'Elixir.StringIO','Elixir.Supervisor',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.SyntaxError','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.Time','Elixir.TokenMissingError',
                        'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError','Elixir.Version',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Parser.DSL',
                        'Elixir.Version.Requirement','Elixir.WithClauseError',
                        elixir,elixir_aliases,elixir_bitstring,
                        elixir_bootstrap,elixir_clauses,elixir_code_server,
                        elixir_compiler,elixir_config,elixir_def,
                        elixir_def_defaults,elixir_def_overridable,
                        elixir_dispatch,elixir_env,elixir_errors,elixir_exp,
                        elixir_exp_clauses,elixir_fn,elixir_for,elixir_import,
                        elixir_interpolation,elixir_lexical,elixir_locals,
                        elixir_map,elixir_module,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_scope,elixir_sup,
                        elixir_tokenizer,elixir_translator,elixir_try,
                        elixir_utils,elixir_with]},
                   {registered,[elixir_config,elixir_code_server]},
                   {applications,[compiler,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{ansi_enabled,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,edeliver,
                  [{description,
                       "Build and Deploy Elixir Applications and perform Hot-Code Upgrades and Schema Migrations"},
                   {vsn,"1.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Edeliver','Elixir.Edeliver.Relup.Config',
                        'Elixir.Edeliver.Relup.DefaultModification',
                        'Elixir.Edeliver.Relup.InsertInstruction',
                        'Elixir.Edeliver.Relup.Instruction',
                        'Elixir.Edeliver.Relup.Instructions',
                        'Elixir.Edeliver.Relup.Instructions.CheckProcessesRunningOldCode',
                        'Elixir.Edeliver.Relup.Instructions.CheckRanchAcceptors',
                        'Elixir.Edeliver.Relup.Instructions.CheckRanchConnections',
                        'Elixir.Edeliver.Relup.Instructions.CodeChangeOnAppProcesses',
                        'Elixir.Edeliver.Relup.Instructions.FinishRunningRequests',
                        'Elixir.Edeliver.Relup.Instructions.Info',
                        'Elixir.Edeliver.Relup.Instructions.ReloadModules',
                        'Elixir.Edeliver.Relup.Instructions.RerunFailedRequests',
                        'Elixir.Edeliver.Relup.Instructions.ResumeAppProcesses',
                        'Elixir.Edeliver.Relup.Instructions.ResumeChannels',
                        'Elixir.Edeliver.Relup.Instructions.ResumeRanchAcceptors',
                        'Elixir.Edeliver.Relup.Instructions.Sleep',
                        'Elixir.Edeliver.Relup.Instructions.SoftPurge',
                        'Elixir.Edeliver.Relup.Instructions.StartSection',
                        'Elixir.Edeliver.Relup.Instructions.SuspendAppProcesses',
                        'Elixir.Edeliver.Relup.Instructions.SuspendChannels',
                        'Elixir.Edeliver.Relup.Instructions.SuspendRanchAcceptors',
                        'Elixir.Edeliver.Relup.Modification',
                        'Elixir.Edeliver.Relup.PhoenixModification',
                        'Elixir.Edeliver.Relup.RunnableInstruction',
                        'Elixir.Edeliver.Relup.ShiftInstruction',
                        'Elixir.Edeliver.StartupProgress',
                        'Elixir.Mix.Tasks.Edeliver',
                        'Elixir.Mix.Tasks.Release.Version',
                        'Elixir.Releases.Plugin.LinkConfig',
                        'Elixir.Releases.Plugin.ModifyRelup']},
                   {registered,
                       ['Elixir.Edeliver.Supervisor','Elixir.Edeliver']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Edeliver',[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.3.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.Supervisor',
                        'Elixir.Logger.Watcher']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {compile_time_purge_level,debug},
                        {compile_time_application,nil},
                        {discard_threshold_for_error_logger,500},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,deppie,
                  [{description,"Elixir's coolest deprecation logger"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,['Elixir.Deppie']},
                   {registered,[]},
                   {applications,[logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,eternal,
                  [{description,"Make your ETS tables live forever"},
                   {vsn,"1.1.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Eternal','Elixir.Eternal.Priv',
                        'Elixir.Eternal.Server','Elixir.Eternal.Supervisor',
                        'Elixir.Eternal.Table']},
                   {registered,[]},
                   {applications,[deppie,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cachex,
                  [{description,
                       "Powerful in-memory key/value storage for Elixir"},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Cachex','Elixir.Cachex.Actions',
                        'Elixir.Cachex.Actions.Clear',
                        'Elixir.Cachex.Actions.Count',
                        'Elixir.Cachex.Actions.Del',
                        'Elixir.Cachex.Actions.Empty',
                        'Elixir.Cachex.Actions.Exists',
                        'Elixir.Cachex.Actions.Expire',
                        'Elixir.Cachex.Actions.Get',
                        'Elixir.Cachex.Actions.GetAndUpdate',
                        'Elixir.Cachex.Actions.Incr',
                        'Elixir.Cachex.Actions.Inspect',
                        'Elixir.Cachex.Actions.Invoke',
                        'Elixir.Cachex.Actions.Keys',
                        'Elixir.Cachex.Actions.Purge',
                        'Elixir.Cachex.Actions.Refresh',
                        'Elixir.Cachex.Actions.Reset',
                        'Elixir.Cachex.Actions.Set',
                        'Elixir.Cachex.Actions.Size',
                        'Elixir.Cachex.Actions.Stats',
                        'Elixir.Cachex.Actions.Stream',
                        'Elixir.Cachex.Actions.Take',
                        'Elixir.Cachex.Actions.Touch',
                        'Elixir.Cachex.Actions.Transaction',
                        'Elixir.Cachex.Actions.Ttl',
                        'Elixir.Cachex.Actions.Update',
                        'Elixir.Cachex.Application','Elixir.Cachex.Commands',
                        'Elixir.Cachex.Constants','Elixir.Cachex.Errors',
                        'Elixir.Cachex.ExecutionError',
                        'Elixir.Cachex.Fallback','Elixir.Cachex.Hook',
                        'Elixir.Cachex.Hook.Behaviour',
                        'Elixir.Cachex.Hook.Stats','Elixir.Cachex.Janitor',
                        'Elixir.Cachex.Limit','Elixir.Cachex.LockManager',
                        'Elixir.Cachex.LockManager.Server',
                        'Elixir.Cachex.LockManager.Table',
                        'Elixir.Cachex.Macros','Elixir.Cachex.Options',
                        'Elixir.Cachex.Policy','Elixir.Cachex.Policy.LRW',
                        'Elixir.Cachex.Record','Elixir.Cachex.State',
                        'Elixir.Cachex.Stats','Elixir.Cachex.Util',
                        'Elixir.Cachex.Util.Names']},
                   {registered,[]},
                   {applications,[eternal,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Cachex.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ibrowse,
                  [{description,"Erlang HTTP client application"},
                   {vsn,"4.2.2"},
                   {id,[]},
                   {modules,
                       [ibrowse,ibrowse_app,ibrowse_http_client,ibrowse_lb,
                        ibrowse_lib,ibrowse_socks5,ibrowse_sup]},
                   {registered,[ibrowse_sup,ibrowse]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibrowse_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 4.0.4"},
                   {vsn,"4.0.4"},
                   {id,[]},
                   {modules,[asn1rt,asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"3.7.1"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.2"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[asn1,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"8.0.2"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_handshake,tls_record,tls_v1,ssl_v3,
                        ssl_v2,dtls_connection,dtls_handshake,dtls_record,
                        dtls_v1,ssl,tls,dtls,ssl_session_cache_api,ssl_config,
                        ssl_connection,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_srp_primes,ssl_alert,ssl_socket,
                        ssl_listen_tracker_sup,inet_tls_dist,inet6_tls_dist,
                        ssl_tls_dist_proxy,ssl_dist_sup,ssl_session,
                        ssl_session_cache,ssl_manager,ssl_pkix_db,
                        ssl_certificate,ssl_crl,ssl_crl_cache,
                        ssl_crl_cache_api,ssl_crl_hash_dir,ssl_app,ssl_sup,
                        tls_connection_sup,dtls_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[public_key,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,httpotion,
                  [{description,
                       "Fancy HTTP client for Elixir, based on ibrowse.\n"},
                   {vsn,"3.0.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.HTTPotion','Elixir.HTTPotion.AsyncChunk',
                        'Elixir.HTTPotion.AsyncEnd',
                        'Elixir.HTTPotion.AsyncHeaders',
                        'Elixir.HTTPotion.AsyncResponse',
                        'Elixir.HTTPotion.Base',
                        'Elixir.HTTPotion.ErrorResponse',
                        'Elixir.HTTPotion.HTTPError',
                        'Elixir.HTTPotion.Headers',
                        'Elixir.HTTPotion.Response']},
                   {registered,[]},
                   {applications,[ibrowse,ssl,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,viralligator,
                  [{description,"viralligator"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Fb','Elixir.GPlus','Elixir.HTTPotion.Cache',
                        'Elixir.Ok','Elixir.UriStringCanonical',
                        'Elixir.UriStringCanonical.BitString',
                        'Elixir.Viralligator','Elixir.Viralligator.Handler',
                        'Elixir.Viralligator.Models',
                        'Elixir.Viralligator.Models.Share',
                        'Elixir.Viralligator.Models.Sharing',
                        'Elixir.Viralligator.Models.TopicState',
                        'Elixir.Viralligator.RedisClient',
                        'Elixir.Viralligator.Server',
                        'Elixir.Viralligator.ShareService','Elixir.Vk',
                        viralligator_thrift,viralligator_types]},
                   {registered,[]},
                   {applications,
                       [edeliver,cachex,httpotion,logger,elixir,stdlib,
                        kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Viralligator',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.3.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.CLI',
                        'Elixir.IEx.Config','Elixir.IEx.Evaluator',
                        'Elixir.IEx.Helpers','Elixir.IEx.History',
                        'Elixir.IEx.History.State','Elixir.IEx.Info',
                        'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
                        'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Float',
                        'Elixir.IEx.Info.Function','Elixir.IEx.Info.Integer',
                        'Elixir.IEx.Info.List','Elixir.IEx.Info.Map',
                        'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
                        'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
                        'Elixir.IEx.Introspection','Elixir.IEx.Remsh',
                        'Elixir.IEx.Server','Elixir.IEx.State']},
                   {registered,['Elixir.IEx.Supervisor','Elixir.IEx.Config']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{autocomplete_server,'Elixir.IEx.Server'},
                        {colors,[]},
                        {inspect,[]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"3.0.1"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[edeliver,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[deppie,permanent]}},
     {apply,{application,start_boot,[eternal,permanent]}},
     {apply,{application,start_boot,[cachex,permanent]}},
     {apply,{application,start_boot,[ibrowse,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[httpotion,permanent]}},
     {apply,{application,start_boot,[viralligator,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
